{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACtCC,EADsC,KAC1BC,EAD0B,KAgB7C,OACG,0BAAMC,SAVY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BACGO,KAAK,OACLC,MAAOT,EACPU,SAlBiB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,Y,uBCPhBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATpB,kBAabM,GAba,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAErC,OACG,yBAAKc,UAAU,0CACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFAO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEbd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiBvC,OAVAC,qBAAW,WACRxB,EAAQC,GACJwB,MAAK,SAAAC,GACHH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAEGqB,EDbwBK,CAAa1B,GAAhCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAEpB,OACG,oCACA,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,aAETH,EAAOJ,KAAI,SAAAC,GAAG,OACX,kBAAC,EAAD,eACGiB,IAAKjB,EAAIC,IACLD,UEhBTkB,EAAe,WAAO,IAAD,EAEK1C,mBAAS,CAAC,cAFf,mBAExB2C,EAFwB,KAEZ5C,EAFY,KAI/B,OACG,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEK4C,EAAWpB,KAAI,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,U,MCd/B8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2f5ec101.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n   const handleInputChange = (e) => {\r\n      setInputValue(e.target.value);\r\n   };\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (inputValue.trim().length > 2) {\r\n         setCategories(cats => [inputValue, ...cats ]);\r\n         setInputValue('');\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n         />\r\n      </form>\r\n   )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=bx7jvsFbGzjSeRQVC3tTmMXwn4CPqU8u`;\r\n   const resp = await fetch(url);\r\n   const {data} = await resp.json();\r\n\r\n   const gifs = data.map( img => {\r\n      return {\r\n         id: img.id,\r\n         title: img.title,\r\n         url: img.images?.downsized_medium.url\r\n      }\r\n   });\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n   return (\r\n      <div className=\"card animate__animated animate__fadeIn\">\r\n         <img src={url} alt={title} />\r\n         <p>{title}</p>\r\n      </div>\r\n   )\r\n}\r\n","//import React, {useState, useEffect} from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   const {data:images, loading} = useFetchGifs(category);\r\n   \r\n   return (\r\n      <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n      <div className=\"card-grid\">\r\n         {\r\n            images.map(img => (\r\n               <GifGridItem \r\n                  key={img.id}\r\n                  {...img} \r\n               />\r\n            ))\r\n         }\r\n      </div>\r\n      </>\r\n      \r\n   )\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true\r\n   });\r\n\r\n   useEffect( () => {\r\n      getGifs(category)\r\n         .then(imgs => {\r\n            setState({\r\n               data: imgs,\r\n               loading: false\r\n            });\r\n      })\r\n   }, [category]);\r\n\r\n   return state; // { data: [], loading: true }\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   const [categories, setCategories] = useState(['One Punch'])\r\n\r\n   return (\r\n      <>\r\n         <h2>GifExpertApp</h2>\r\n         <AddCategory setCategories={setCategories} />\r\n         <hr />\r\n\r\n         <ol>\r\n            {\r\n              categories.map(category => (\r\n                 <GifGrid \r\n                     key={category}\r\n                     category={category} \r\n                 />\r\n              ))\r\n            }\r\n         </ol>\r\n      </>\r\n   )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}